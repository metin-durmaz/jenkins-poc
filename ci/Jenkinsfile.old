pipeline {
    // agent { docker { image 'maven' } }
    agent any
    environment {
        DOCKER_HOME = tool 'my-docker'
        MAVEN_HOME = tool 'my-maven'
        PATH = "$MAVEN_HOME/bin:$DOCKER_HOME/bin:$PATH"
    }
    stages {
        stage('Checkout') {
            steps {
                sh 'mvn --version'
                sh 'docker version'
                echo "Build"
                echo "PATH - $PATH"
                echo "BUILD_NUMBER - $env.BUILD_NUMBER"
                echo "BUILD_ID - $env.BUILD_ID"
                echo "JOB_NAME - $env.JOB_NAME"
                echo "BUILD_TAG - $env.BUILD_TAG"
                echo "BUILD_URL - $env.BUILD_URL"
                echo "DOCKER_HOME - $env.DOCKER_HOME"
                echo "MAVEN_HOME - $env.MAVEN_HOME"
            }
        }
        stage('Compile') {
            steps {
                sh "mvn -f $env.WORKSPACE/jenkins-demo clean compile"
            }
        }
        stage('Test') {
            steps {
                sh "mvn -f $env.WORKSPACE/jenkins-demo test"
            }
        }
        stage('Package') {
            steps {
                sh "mvn -f $env.WORKSPACE/jenkins-demo package -DskipTests"
            }
        }
        stage('Build Docker Image') {
            steps {
                dir("$env.WORKSPACE/jenkins-demo") {
                    script {
                        dockerImage = docker.build("metin123/jenkins-demo:${env.BUILD_TAG}", "-f $env.WORKSPACE/jenkins-demo/Dockerfile .");
                    }
                }

            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('', 'dockerhub') {
                        dockerImage.push();
                        dockerImage.push('latest');
                    }
                }
            }
        }
    }

    post {
        always {
            echo "I run always."
        }
        success {
            echo "I run when you are successfull."
        }
        failure {
            echo "I run when you fail."
        }
        changed {
            echo "I run when build status changed."
        }
    }
}